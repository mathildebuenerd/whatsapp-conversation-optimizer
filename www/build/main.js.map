{"version":3,"sources":["../../src/services/TextAnalysis.service.ts","../../src/pages/contacts/contacts.ts","../../node_modules/@angular/core/esm5 lazy","../../src lazy","../../src/pages/tabs-menu/tabs-menu.ts","../../src/pages/home/home.ts","../../src/app/main.ts","../../src/app/app.module.ts","../../src/app/app.component.ts","../../src/pages/contacts/contact-profile/contact-profile.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import * as sent from 'node-sentiment-jouska';\nimport local = browser.storage.local;\n\nexport class TextAnalysisService {\n\n  constructor() {\n    console.log(\"constructor TextAnalysisService\");\n\n    // If it's the first time we ever run an analysis we add an entry to the localStorage\n    if (!JSON.parse(localStorage.getItem('analyses'))) {\n      let analyses = [];\n      localStorage.setItem('analyses', JSON.stringify(analyses));\n    }\n\n  }\n\n  findConversation(contact: string) {\n    const allConversations = JSON.parse(localStorage.getItem(\"conversations\"));\n    for (const conversation of allConversations) {\n      if (conversation.hasOwnProperty(\"name\")) {\n        if (conversation.name == contact) {\n          return conversation;\n        }\n      }\n    }\n  }\n\n  countEmojis(data) {\n    let emojiList = [];\n    // console.log(`data:`, data);\n    // console.log(`typeof data: ${typeof data}`);\n    for (const message of data) {\n      // console.log(`message:`, message);\n      if (message.emojis !== []) {\n        for (const emoji of message.emojis) {\n          let found = false;\n          for (const entry in emojiList) {\n            if (emojiList[entry].character === emoji) {\n              emojiList[entry].occurrence++;\n              found = true;\n              break;\n            }\n          }\n          if (!found) {\n            emojiList.push(\n              {\n                character: emoji,\n                occurrence: 1\n              });\n          }\n\n          // console.log(`message.emojis`, message.emojis);\n          // console.log(`emoji`, emoji);\n\n        }\n      }\n    }\n    // console.log(`emojiList`, emojiList);\n    return emojiList;\n  }\n\n  getEmojis(contact: string) {\n\n    const data = this.findConversation(contact);\n    console.log(`data in getEmojis:`, data);\n    // console.log(data.messages);\n    const emojiIn = this.countEmojis(data.messages.messagesIn);\n    const emojiOut = this.countEmojis(data.messages.messagesOut);\n\n    // Returns all the infomations needed for adding it to localStorage\n    return {\n      name: contact,\n      type: 'emoji',\n      data: {\n        emojiIn,\n        emojiOut\n      }\n    }\n  }\n\n  addToStorage(contactName: string, type: string, data: Object, isAnalyzed: boolean) {\n\n    console.log(`j'ajoute au storage`);\n\n    // Get all the analyses because we can't directly push something into the localStorage\n    let analyses = JSON.parse(localStorage.getItem('analyses'));\n\n    // If it's already analyzed it means it's an update\n    // So we have to do it a bit differently\n    if (isAnalyzed) {\n      console.log(`c'est pas nouveau!!`);\n      for (const contact of analyses) {\n        if (contact.name == contactName) {\n          contact.analyses[type] = data;\n        }\n      }\n    } else {\n      console.log(`c'est nouveau!!`);\n      analyses.push({\n        name: contactName,\n        analyses: {\n          [type]: data\n        }\n      });\n    }\n\n    // console.log(`analyses`, analyses);\n    localStorage.setItem('analyses', JSON.stringify(analyses));\n    // console.log(`ce que j'ai ajouté au storage:`, JSON.parse(localStorage.getItem('analyses')));\n  }\n\n  sentiment() {\n    console.log(`sent:`, sent);\n    return sent('hello, how are you today ?');\n  }\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/services/TextAnalysis.service.ts","import { Component } from '@angular/core';\nimport { IonicPage, NavController, NavParams } from 'ionic-angular';\nimport {ContactProfilePage} from \"./contact-profile/contact-profile\";\n\n/**\n * Generated class for the ContactsPage page.\n *\n * See https://ionicframework.com/docs/components/#navigation for more info on\n * Ionic pages and navigation.\n */\n\n@IonicPage()\n@Component({\n  selector: 'page-contacts',\n  templateUrl: 'contacts.html',\n})\nexport class ContactsPage {\n\n  contactList: Array<string> = JSON.parse(localStorage.getItem('contactList'));\n\n  constructor(public navCtrl: NavController, public navParams: NavParams) {\n    // this.contactList = JSON.parse(localStorage.getItem('contactList'));\n  }\n\n  ionViewDidLoad() {\n    console.log('ionViewDidLoad ContactsPage');\n  }\n\n  ionViewWillEnter() {\n    // Make sure that we have all the contacts displayed\n    this.contactList = JSON.parse(localStorage.getItem('contactList'));\n  }\n\n  onGoToSingleContact(name: string) {\n    this.navCtrl.push(ContactProfilePage, {contactName: name});\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/contacts/contacts.ts","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 111;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@angular/core/esm5 lazy\n// module id = 111\n// module chunks = 2","var map = {\n\t\"../pages/contacts/contact-profile/contact-profile.module\": [\n\t\t282,\n\t\t1\n\t],\n\t\"../pages/contacts/contacts.module\": [\n\t\t283,\n\t\t0\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids)\n\t\treturn Promise.reject(new Error(\"Cannot find module '\" + req + \"'.\"));\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(ids[0]);\n\t});\n};\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 152;\nmodule.exports = webpackAsyncContext;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src lazy\n// module id = 152\n// module chunks = 2","import { Component } from \"@angular/core\";\nimport { HomePage } from \"../home/home\";\nimport { ContactsPage } from \"../contacts/contacts\";\nimport { ContactProfilePage } from \"../contacts/contact-profile/contact-profile\";\nimport { NavParams } from \"ionic-angular\";\n\n\n@Component({\n  selector: 'tabs-menu',\n  templateUrl: 'tabs-menu.html'\n})\n\nexport class TabsPage {\n  private params: NavParams;\n  // private contactName: any;\n  contactName: string;\n\n\n  constructor(params?: NavParams) {\n    this.contactName = this.getContactName();\n  }\n\n  getContactName(): string {\n    let currName = \"\";\n    const name = browser.tabs.executeScript(null, {file: '../assets/js/getCurrentContact.js'})\n      .then( (name) => {\n        console.log(`nom: `, name[0]);\n        currName = String(name[0]);\n      });\n    return currName;\n  }\n\n  homePage = HomePage;\n  contactsPage = ContactsPage;\n  contactProfilePage = ContactProfilePage;\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/tabs-menu/tabs-menu.ts","import { Component } from '@angular/core';\nimport {AlertController, NavController} from 'ionic-angular';\nimport {ContactProfilePage} from \"../contacts/contact-profile/contact-profile\";\n\n@Component({\n  selector: 'page-home',\n  templateUrl: 'home.html'\n})\nexport class HomePage {\n\n  currentName: string;\n  currentConversation: Object;\n\n  constructor(public navCtrl: NavController,\n              public alertCtrl: AlertController) {\n    this.currentName = '';\n\n    // If the localStorage is empty, we add \"conversations\" and \"contactList\" items\n    if (!JSON.parse(localStorage.getItem(\"conversations\"))) {\n      // console.log(\"conversations n'existe pas\");\n      const conversations = [];\n      localStorage.setItem('conversations', JSON.stringify(conversations));\n    }\n\n    if (!JSON.parse(localStorage.getItem(\"contactList\"))) {\n      // We also create a contactList array\n      const contactList = [];\n      localStorage.setItem('contactList', JSON.stringify(contactList));\n    }\n\n\n  }\n\n  scrapConversation(): void {\n    const getContent = browser.tabs.executeScript(null, {file: '../assets/js/content.js'}\n    ).then((content) => {\n      console.log(\"promesse réussie\");\n      console.log(content);\n\n      this.currentConversation = content[0][\"messages\"];\n      this.currentName = content[0][\"contactName\"];\n      console.log(`j'ai reçu comme content de la promesse:`, content, content[\"messages\"], content[\"contactName\"]);\n      this.askForLanguage();\n      this.onGoToSingleContact(this.currentName);\n\n\n      // console.log(JSON.parse(localStorage.getItem(\"conversations\")));\n      // console.log(JSON.parse(localStorage.getItem(\"conversations\")));\n    }).catch((error) => {\n      console.warn(\"promesse échouée\", error);\n    });\n  }\n\n  openAddContactForm() {\n\n  }\n\n  onGoToSingleContact(name: string) {\n    this.navCtrl.push(ContactProfilePage, {contactName: name});\n  }\n\n  addConversationToStorage(contactName, language) {\n\n\n    // as we can't \"push()\" into the localstorage\n    // we have to first get all the content, modify it and then add it back to the localstorage\n    let conversations = JSON.parse(localStorage.getItem('conversations'));\n    // console.log(conversations);\n\n    let isNew = true;\n\n\n    for (const contact of conversations) {\n      if (contact.name == contactName) {\n        // If we have already added that contact, we update the already existing entry instead of adding a new one\n        contact.language = language;\n        contact.messages = this.currentConversation;\n        isNew = false; // as the contact was already in the list, we set isNew to false so that it will not be added once again\n        break;\n      }\n    }\n\n    if (isNew) {\n      // If it's the first time we see that contact, then we add a new entry\n      conversations.push({\n        name: contactName,\n        language: language,\n        messages: this.currentConversation\n      });\n\n      // And we also add it to the contactList\n      const contactList = JSON.parse(localStorage.getItem('contactList'));\n      contactList.push(contactName);\n      localStorage.setItem('contactList', JSON.stringify(contactList));\n    }\n\n\n\n\n\n    localStorage.setItem(\"conversations\", JSON.stringify(conversations));\n    console.log(JSON.parse(localStorage.getItem(\"conversations\")));\n\n\n    this.currentName = \"\";\n    this.currentConversation = \"\";\n  }\n\n\n\n  private askForLanguage() {\n\n    const promptAlert = this.alertCtrl.create({\n      title: `Add conversation with ${this.currentName}`,\n      message: 'What language it is?',\n      inputs: [\n        {\n          name: 'language',\n          placeholder: `en`,\n          value: 'en'\n        }\n      ],\n      buttons: [\n        {\n          text: 'Save conversation',\n          handler: data => {\n            // console.log(`data:`, data);\n            // this.currentName = data['contact-name'];\n            this.addConversationToStorage(this.currentName, data['language']);\n          }\n        }\n      ]\n    });\n    promptAlert.present();\n  }\n\n  printLocalStorage(key) {\n    console.log(JSON.parse(localStorage.getItem(key)));\n  }\n\n\n  showTextData(): void {\n    this.getContactName().then( (contactName) => {\n      console.log(`contact name`, contactName);\n      // Shows the conversation in a text form so that we can use it for training the LSTM model\n      const data = JSON.parse(localStorage.getItem(\"conversations\"));\n      let text = \"\";\n      for (const contact of data) {\n        if (contact.name === contactName) {\n          for (const message of contact.messages.messagesIn) {\n            // Because message.emojis is an array, we remove the commas\n            const emojis = String(message.emojis).replace(/,/g, '');\n            // Add a line break at the end of the sentence\n            text+= `${message.text} ${emojis} \\r`;\n          }\n        }\n      }\n      console.log(text)\n    });\n\n  }\n\n  getContactName(): Promise<string> {\n    return browser.tabs.executeScript(null, {file: '../assets/js/getCurrentContact.js'})\n      .then( (name) => {\n        console.log(`nom: `, name[0]);\n        return String(name[0]);\n      });\n  }\n\n\n  emptyStorage() {\n    // Confirm alert to avoid deleting accidentally the data\n    let confirmAlert = this.alertCtrl.create({\n      title: 'You are going to completly empty the storage',\n      message: 'Are you sure you want to delete all the data?',\n      buttons: [\n        {\n          text: 'Cancel',\n          role: 'cancel'\n        },\n        {\n          text: 'Delete',\n          handler: () => {\n            localStorage.clear();\n          }\n        }\n      ]\n    });\n    confirmAlert.present();\n  }\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/home/home.ts","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app.module';\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule);\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { ErrorHandler, NgModule } from '@angular/core';\nimport { IonicApp, IonicErrorHandler, IonicModule } from 'ionic-angular';\nimport { SplashScreen } from '@ionic-native/splash-screen';\nimport { StatusBar } from '@ionic-native/status-bar';\n\nimport { MyApp } from './app.component';\nimport { HomePage } from '../pages/home/home';\nimport { ContactsPage } from \"../pages/contacts/contacts\";\nimport { ContactProfilePage } from \"../pages/contacts/contact-profile/contact-profile\";\nimport { TabsPage } from \"../pages/tabs-menu/tabs-menu\";\n\nimport { TextAnalysisService } from \"../services/TextAnalysis.service\";\n\n\n@NgModule({\n  declarations: [\n    MyApp,\n    HomePage,\n    // ContactsPage,\n    // ContactProfilePage,\n    TabsPage\n  ],\n  imports: [\n    BrowserModule,\n    IonicModule.forRoot(MyApp)\n  ],\n  bootstrap: [IonicApp],\n  entryComponents: [\n    MyApp,\n    HomePage,\n    ContactsPage,\n    ContactProfilePage,\n    TabsPage\n  ],\n  providers: [\n    StatusBar,\n    SplashScreen,\n    TextAnalysisService,\n    {provide: ErrorHandler, useClass: IonicErrorHandler}\n  ]\n})\nexport class AppModule {\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import { Component } from '@angular/core';\nimport { Platform } from 'ionic-angular';\nimport { StatusBar } from '@ionic-native/status-bar';\nimport { SplashScreen } from '@ionic-native/splash-screen';\n\nimport { HomePage } from '../pages/home/home';\nimport { TabsPage } from \"../pages/tabs-menu/tabs-menu\";\n\n@Component({\n  templateUrl: 'app.html'\n})\nexport class MyApp {\n  rootPage:any = TabsPage;\n\n  constructor(platform: Platform,\n              statusBar: StatusBar,\n              splashScreen: SplashScreen) {\n    platform.ready().then(() => {\n      // Okay, so the platform is ready and our plugins are available.\n      // Here you can do any higher level native things you might need.\n      statusBar.styleDefault();\n      splashScreen.hide();\n    });\n\n  }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { Component } from '@angular/core';\nimport { IonicPage, NavController, NavParams } from 'ionic-angular';\nimport { TextAnalysisService } from \"../../../services/TextAnalysis.service\";\n\n\n/**\n * Generated class for the ContactProfilePage page.\n *\n * See https://ionicframework.com/docs/components/#navigation for more info on\n * Ionic pages and navigation.\n */\n\n@IonicPage()\n@Component({\n  selector: 'page-contact-profile',\n  templateUrl: 'contact-profile.html',\n})\nexport class ContactProfilePage {\n\n  name: string;\n  data: Object;\n  isAnalyzed: boolean;\n  analysis;\n\n  favouriteEmojis: Object;\n  // contactName: string;\n\n  constructor(analysis: TextAnalysisService,\n              public navParams: NavParams) {\n    // this.name = name;\n    // this.data = Object;\n\n    // this.params = params;\n    // console.log(this.params); // returns NavParams {data: Object}\n    // this.contactName = navParams.data.contactName;\n\n    console.log(`navParams de contact profile: `, navParams)\n    this.analysis = analysis;\n    this.favouriteEmojis = {\n      \"out\": {},\n      \"in\": {}\n    };\n    // console.log(`this.analysis`, this.analysis);\n  }\n\n  ngOnInit() {\n    // Get the name passed when we came from the precedent page\n    this.name = this.navParams.get('contactName');\n\n    this.isAnalyzed = false;\n\n    if (JSON.parse(localStorage.getItem('analyses'))) {\n      const allAnalyses = JSON.parse(localStorage.getItem('analyses'));\n      for (const entry of allAnalyses) {\n        if (entry.name === this.name) {\n          this.favouriteEmojis = {\n            \"out\": entry.analyses.emoji.emojiIn,\n            \"in\": entry.analyses.emoji.emojiOut\n          };\n          this.isAnalyzed = true;\n        }\n      }\n    }\n  }\n\n  analyzeContact() {\n    const emojis = this.analysis.getEmojis(this.name);\n    console.log(`emojis received in analyseContact`, emojis);\n    this.favouriteEmojis[\"out\"] = emojis.data[\"emojiOut\"];\n    this.favouriteEmojis[\"in\"] = emojis.data[\"emojiIn\"];\n\n    this.analysis.addToStorage(emojis.name, emojis.type, emojis.data, this.isAnalyzed);\n\n    console.log(`this.favouriteEmojis`, this.favouriteEmojis);\n    this.isAnalyzed = true;\n\n  //  Integration of the sentiment analysis\n    const testSentiment = this.analysis.sentiment();\n    console.log(testSentiment);\n\n\n  }\n\n\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/contacts/contact-profile/contact-profile.ts"],"sourceRoot":""}